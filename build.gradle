import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.24'
}

allprojects {
    group = 'leetangle.util'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '17'
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('snippetsDir', file("build/generated-snippets"))
        set('springCloudVersion', "2023.0.1")
    }

}


subprojects {
    apply {
        plugin("org.springframework.boot")
        plugin("io.spring.dependency-management")
        plugin("org.jetbrains.kotlin.jvm")
        plugin("org.jetbrains.kotlin.plugin.spring")
    }
    dependencies {
//        implementation 'org.springframework.boot:spring-boot-starter-actuator'
//        implementation 'org.springframework.boot:spring-boot-starter-amqp'
//        implementation 'org.springframework.boot:spring-boot-starter-batch'
//        implementation 'org.springframework.boot:spring-boot-starter-data-couchbase'
//        implementation 'org.springframework.boot:spring-boot-starter-data-couchbase-reactive'
//        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//        implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
//        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
//        implementation 'org.springframework.boot:spring-boot-starter-graphql'
//        implementation 'org.springframework.boot:spring-boot-starter-integration'
//        implementation 'org.springframework.boot:spring-boot-starter-jooq'
//        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//        implementation 'org.springframework.boot:spring-boot-starter-quartz'
//        implementation 'org.springframework.boot:spring-boot-starter-security'
//        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//        implementation 'org.springframework.boot:spring-boot-starter-validation'
//        implementation 'org.springframework.boot:spring-boot-starter-web'
//        implementation 'org.springframework.boot:spring-boot-starter-webflux'
//        implementation 'org.springframework.boot:spring-boot-starter-websocket'
//        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
//        implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
//        implementation 'org.apache.kafka:kafka-streams'
//        implementation 'org.jetbrains.kotlin:kotlin-reflect'
//        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
//        implementation 'org.springframework.amqp:spring-rabbit-stream'
//        implementation 'org.springframework.cloud:spring-cloud-config-server'
//        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
//        implementation 'org.springframework.cloud:spring-cloud-starter-config'
//        implementation 'org.springframework.cloud:spring-cloud-starter-task'
//        implementation 'org.springframework.integration:spring-integration-amqp'
//        implementation 'org.springframework.integration:spring-integration-http'
//        implementation 'org.springframework.integration:spring-integration-jpa'
//        implementation 'org.springframework.integration:spring-integration-kafka'
//        implementation 'org.springframework.integration:spring-integration-r2dbc'
//        implementation 'org.springframework.integration:spring-integration-redis'
//        implementation 'org.springframework.integration:spring-integration-security'
//        implementation 'org.springframework.integration:spring-integration-stomp'
//        implementation 'org.springframework.integration:spring-integration-webflux'
//        implementation 'org.springframework.integration:spring-integration-websocket'
//        implementation 'org.springframework.kafka:spring-kafka'
//        implementation 'org.springframework.session:spring-session-data-redis'
//        implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
//        developmentOnly 'org.springframework.boot:spring-boot-devtools'
//        runtimeOnly 'io.micrometer:micrometer-registry-influx'
//        testImplementation 'org.springframework.boot:spring-boot-starter-test'
//        testImplementation 'io.projectreactor:reactor-test'
//        testImplementation 'org.springframework.amqp:spring-rabbit-test'
//        testImplementation 'org.springframework.batch:spring-batch-test'
//        testImplementation 'org.springframework.graphql:spring-graphql-test'
//        testImplementation 'org.springframework.integration:spring-integration-test'
//        testImplementation 'org.springframework.kafka:spring-kafka-test'
//        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//        testImplementation 'org.springframework.security:spring-security-test'
//        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }


    test {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}


tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
